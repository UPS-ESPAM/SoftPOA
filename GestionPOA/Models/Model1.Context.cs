//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GestionPOA.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PEDIEntities : DbContext
    {
        public PEDIEntities()
            : base("name=PEDIEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TipoCalificacion> TipoCalificacion { get; set; }
        public virtual DbSet<Departamento> Departamento { get; set; }
        public virtual DbSet<ObjeEspecificosDepartamento> ObjeEspecificosDepartamento { get; set; }
        public virtual DbSet<ObjetivosEspecificos> ObjetivosEspecificos { get; set; }
        public virtual DbSet<ObjetivosEstrategicos> ObjetivosEstrategicos { get; set; }
        public virtual DbSet<periodo> periodo { get; set; }
        public virtual DbSet<Subsistema> Subsistema { get; set; }
        public virtual DbSet<Acciones> Acciones { get; set; }
        public virtual DbSet<Estrategias> Estrategias { get; set; }
        public virtual DbSet<Evidencias> Evidencias { get; set; }
        public virtual DbSet<Indicadores> Indicadores { get; set; }
        public virtual DbSet<InformacioAdicional> InformacioAdicional { get; set; }
        public virtual DbSet<intervalo> intervalo { get; set; }
        public virtual DbSet<Metas> Metas { get; set; }
        public virtual DbSet<Periocidad> Periocidad { get; set; }
        public virtual DbSet<Planificacion> Planificacion { get; set; }
        public virtual DbSet<Presupuesto> Presupuesto { get; set; }
        public virtual DbSet<Programacion> Programacion { get; set; }
        public virtual DbSet<TipoPlanificacion> TipoPlanificacion { get; set; }
    
        public virtual ObjectResult<spLoginIngreso_Result> spLoginIngreso(string usuario, string clave)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLoginIngreso_Result>("spLoginIngreso", usuarioParameter, claveParameter);
        }
    
        public virtual ObjectResult<spObjetivosEspecificosbyDepartamento_Result> spObjetivosEspecificosbyDepartamento(Nullable<int> department)
        {
            var departmentParameter = department.HasValue ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObjetivosEspecificosbyDepartamento_Result>("spObjetivosEspecificosbyDepartamento", departmentParameter);
        }
    }
}
